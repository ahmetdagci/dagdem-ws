package com.tr.dagdem.model.product;


import java.math.BigDecimal;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.Length;

import com.google.common.collect.Sets;
import com.tr.dagdem.model.enums.ProductType;
import com.tr.dagdem.model.sale.MusteriSatisTable;

/**
 * UrunTanimTable generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "urun_tanim_table")
public class UrunTanimTable implements java.io.Serializable {

	private int urunKodu;
	private String urunAdi;
	private String urunAciklama;
	private String image;
	private ProductType type;
	private Double fiyat;
	private Double tutar;
	private Double alisFiyati;
	//Transient variables
	private int adet = 1;
	private boolean sepeteEklendi = false;
	
	
	private Set<MusteriSatisTable> musteriyeYapilanSatislar = Sets.newHashSet();

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "urun_kodu", unique = true, nullable = false)
	public int getUrunKodu() {
		return this.urunKodu;
	}

	public void setUrunKodu(int urunKodu) {
		this.urunKodu = urunKodu;
	}

	@Column(name = "urun_adi", length = 100)
	@Length(max=100)
	public String getUrunAdi() {
		return this.urunAdi;
	}

	public void setUrunAdi(String urunAdi) {
		this.urunAdi = urunAdi;
	}

	@Column(name = "urun_aciklama", length = 200)
	@Length(max=200)
	public String getUrunAciklama() {
		return this.urunAciklama;
	}

	public void setUrunAciklama(String urunAciklama) {
		this.urunAciklama = urunAciklama;
	}
	
	@Column(name = "image", length = 50)
	@Length(max=50)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}
	
	@Enumerated(EnumType.STRING)
	public ProductType getType() {
		return this.type;
	}

	public void setType(ProductType type) {
		this.type = type;
	}

	
	@Column(name = "fiyat", precision = 22, scale = 0)
	public Double getFiyat() {
		return this.fiyat;
	}

	public void setFiyat(Double fiyat) {
		this.fiyat = fiyat;
	}
	
	@Column(name = "tutar", precision = 22, scale = 2)
	public Double getTutar() {
		return tutar;
	}
	
	public void setTutar(Double tutar) {
		this.tutar = tutar;
	}
	
	@Column(name = "alis_fiyati", precision = 22, scale = 0)
	public Double getAlisFiyati() {
		return alisFiyati;
	}

	public void setAlisFiyati(Double alisFiyati) {
		this.alisFiyati = alisFiyati;
	}
	
	@OneToMany(cascade=CascadeType.ALL,fetch=FetchType.LAZY,mappedBy="pk.urun")
	public Set<MusteriSatisTable> getMusteriyeYapilanSatislar() {
		return musteriyeYapilanSatislar;
	}

	public void setMusteriyeYapilanSatislar(Set<MusteriSatisTable> musteriyeYapilanSatislar) {
		this.musteriyeYapilanSatislar = musteriyeYapilanSatislar;
	}
		
	@Transient
	public int getAdet() {
		return adet;
	}

	public void setAdet(int adet) {
		this.adet = adet;
	}
	
	@Transient
	public boolean isSepeteEklendi() {
		return sepeteEklendi;
	}
	
	public void setSepeteEklendi(boolean sepeteEklendi) {
		this.sepeteEklendi = sepeteEklendi;
	}
	
	@Transient
	public BigDecimal getToplamSatisTutari()
	{
		return new BigDecimal(getFiyat()*getAdet());
	}

	public static UrunTanimTable urunKoduylaUrunBul(List<UrunTanimTable> urunler,int urunKodu){
		for(UrunTanimTable urun:urunler){
			if(urun.getUrunKodu()==urunKodu){
				return urun;
			}
		}
		return null;
	}  

	public static void urunKoduylaUrunCikar(List<UrunTanimTable> urunler,UrunTanimTable urun){
		urunler.remove(urun);
	}
	
}
